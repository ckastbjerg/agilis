#!/usr/bin/env node

'use strict';

process.title = 'cakewalk';

const fs = require('fs');
const program = require('commander');
const opn = require('opn');
const cakewalk = require('../index.js');
const serve = require('./serve');

const inputDir = process.argv[2];
const outputDir = process.argv[3];

function writeFile() {
    const markup = cakewalk(inputDir);
    if (!fs.existsSync(outputDir)){
        fs.mkdirSync(outputDir);
    }

    fs.writeFile(`${outputDir}/index.html`, markup, err => {
        if (err) {
            return console.log(err);
        }
        serve.update(markup);
    });
}

program
    .usage('[options] <input-dir> <output-file>')
    .option('-w, --watch', 'Save file on change')
    .option('-s, --serve', 'Serve file on localhost:3000')
    .option('-o, --open', 'Open tab with localhost:3000 in default browser')
    .option('-d, --dev', 'Save file on change and serve file on localhost:3000')
    .parse(process.argv);

if (!inputDir || !outputDir){
    program.help();
    return;
} else if (!fs.lstatSync(inputDir).isDirectory()) {
    console.error(`${inputDir} is not a directory`);
    program.help();
    return;
}

writeFile();

if (program.open || program.dev) {
    program.open && opn(`${outputDir}/index.html`);
}

if (program.watch || program.dev) {
    fs.watch(inputDir, { recursive: true }, writeFile);
}

if (program.serve || program.dev) {
    serve.init(cakewalk(inputDir));
}
